package asyncd

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"

	"fs.io/asyncd/ent"
)

// Node is the resolver for the node field.
// GraphQL是用图的思维来看整个数据库
// Node 通用的API接口 可以查询任意的节点(query by id)
func (r *queryResolver) Node(ctx context.Context, id int) (ent.Noder, error) {
	return r.client.Noder(ctx, id)
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []int) ([]ent.Noder, error) {
	return r.client.Noders(ctx, ids)
}

// EntTasks is the resolver for the entTasks field.
// entTasks 查询所有的任务的
func (r *queryResolver) EntTasks(ctx context.Context) ([]*ent.EntTask, error) {
	return r.client.EntTask.Query().All(ctx)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

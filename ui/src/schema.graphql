directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateEntTaskHandlerInput is used for create EntTaskHandler object.
Input was generated by ent.
"""
input CreateEntTaskHandlerInput {
  """
  handler name
  """
  name: String!
  """
  handler's signature, E.g: (int) -> int
  """
  signature: String!
  createdAt: Time
  updatedAt: Time
}
"""
CreateEntTaskInput is used for create EntTask object.
Input was generated by ent.
"""
input CreateEntTaskInput {
  """
  This is the handler of the task
  """
  handler: String!
  """
  This is JSON input of the task
  """
  parameter: String!
  """
  This is the priority of the task
  """
  priority: Int!
  createdAt: Time
  updatedAt: Time
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type EntTask implements Node {
  id: ID!
  """
  This is the handler of the task
  """
  handler: String!
  """
  This is JSON input of the task
  """
  parameter: String!
  """
  This is the priority of the task
  """
  priority: Int!
  createdAt: Time!
  updatedAt: Time!
}
"""
A connection to a list of items.
"""
type EntTaskConnection {
  """
  A list of edges.
  """
  edges: [EntTaskEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntTaskEdge {
  """
  The item at the end of the edge.
  """
  node: EntTask
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntTaskHandler implements Node {
  id: ID!
  """
  handler name
  """
  name: String!
  """
  handler's signature, E.g: (int) -> int
  """
  signature: String!
  createdAt: Time!
  updatedAt: Time!
}
"""
A connection to a list of items.
"""
type EntTaskHandlerConnection {
  """
  A list of edges.
  """
  edges: [EntTaskHandlerEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntTaskHandlerEdge {
  """
  The item at the end of the edge.
  """
  node: EntTaskHandler
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "fs.io/asyncd/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  entTasks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EntTaskConnection!
  entTaskHandlers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EntTaskHandlerConnection!
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateEntTaskHandlerInput is used for update EntTaskHandler object.
Input was generated by ent.
"""
input UpdateEntTaskHandlerInput {
  """
  handler name
  """
  name: String
  """
  handler's signature, E.g: (int) -> int
  """
  signature: String
  createdAt: Time
  updatedAt: Time
}
"""
UpdateEntTaskInput is used for update EntTask object.
Input was generated by ent.
"""
input UpdateEntTaskInput {
  """
  This is the handler of the task
  """
  handler: String
  """
  This is JSON input of the task
  """
  parameter: String
  """
  This is the priority of the task
  """
  priority: Int
  createdAt: Time
  updatedAt: Time
}

type Mutation {
    createEntTask(input: CreateEntTaskInput!): EntTask!
    updateEntTask(id: ID!, input:UpdateEntTaskInput!): EntTask!
    deleteEntTask(id: ID!): EntTask!

    createEntTaskHandler(input: CreateEntTaskHandlerInput!): EntTaskHandler!
    updateEntTaskHandler(id: ID!, input: UpdateEntTaskHandlerInput!): EntTaskHandler!
    deleteEntTaskHandler(id: ID!): EntTaskHandler!
}
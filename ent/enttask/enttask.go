// Code generated by ent, DO NOT EDIT.

package enttask

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the enttask type in the database.
	Label = "ent_task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHandler holds the string denoting the handler field in the database.
	FieldHandler = "handler"
	// FieldParameter holds the string denoting the parameter field in the database.
	FieldParameter = "parameter"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the enttask in the database.
	Table = "ent_tasks"
)

// Columns holds all SQL columns for enttask fields.
var Columns = []string{
	FieldID,
	FieldHandler,
	FieldParameter,
	FieldPriority,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// UpdateDefaultCreatedAt holds the default value on update for the "created_at" field.
	UpdateDefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the EntTask queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHandler orders the results by the handler field.
func ByHandler(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHandler, opts...).ToFunc()
}

// ByParameter orders the results by the parameter field.
func ByParameter(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldParameter, opts...).ToFunc()
}

// ByPriority orders the results by the priority field.
func ByPriority(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPriority, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
